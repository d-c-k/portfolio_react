{"version":3,"sources":["contexts/SettingsContext.js","assets/texts.js","components/ButtonStyled.jsx","components/layout/SettingsDivStyled.jsx","components/Settings.jsx","components/layout/HeaderStyled.jsx","components/layout/TitleStyled.jsx","components/Header.jsx","assets/skills.js","components/LineBreakText.jsx","components/ListStyled.jsx","components/SkillList.jsx","components/layout/HSection1Styled.jsx","components/layout/ListBlockStyled.jsx","components/layout/SectionTitleStyled.jsx","components/layout/TextBlockStyled.jsx","components/HorizontalSection1.jsx","assets/work.js","components/CarouselDotsStyled.jsx","components/DotStyled.jsx","assets/img/chat-app_screen.jpg","assets/img/react_crud_screen.jpg","assets/img/audioplayer_screen.jpg","assets/img/quiz_screen.jpg","components/SlideBackgroundStyled.jsx","components/SlideForegroundStyled.jsx","components/layout/SlideGridStyled.jsx","components/Slide.jsx","components/SlideButtonStyled.jsx","components/layout/CarouselStyled.jsx","components/Carousel.jsx","components/layout/HSection2Styled.jsx","components/HorizontalSection2.jsx","components/layout/HSection3Styled.jsx","components/layout/SingleColStyled.jsx","components/HorizontalSection3.jsx","components/layout/MainContainerStyled.jsx","App.js","reportWebVitals.js","index.js"],"names":["SettingsContext","createContext","texts","sv","en","ButtonStyled","styled","button","props","active","SettingsDivStyled","div","Settings","useContext","lang","setLang","theme","setTheme","onClick","HeaderStyled","TitleStyled","Header","skills","LineBreakText","formattedText","text","split","map","str","index","ListStyled","ul","SkillList","list","listItem","key","HSection1Styled","ListBlockStyled","SectionTitleStyled","TextBlockStyled","HorizontalSection1","work","title","links","repo","page","image","mob","desktop","CarouselDotsStyled","DotStyled","color","SlideBackgroundStyled","imageIndex","zero","one","two","three","SlideForegroundStyled","SlideGridStyled","Slide","data","href","target","SlideButtonStyled","side","CarouselStyled","Carousel","slideArr","useState","x","setX","setActive","i","className","style","transform","id","length","item","HSection2Styled","HorizontalSection2","HSection3Styled","SingleColStyled","col","HorizontalSection3","MainContainerStyled","App","SettingsContextValue","Provider","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MAEaA,EAAkBC,0BCuChBC,EAzCD,CACV,CACIC,GAAI,6BACJC,GAAI,8BAER,CACID,GAAI,SACJC,GAAI,YAER,CACID,GAAI,sVAMJC,GAAI,sSAOR,CACID,GAAI,UACJC,GAAI,WAER,CACID,GAAI,aACJC,GAAI,SAER,CACID,GAAI,MACJC,GAAI,QAER,CACID,GAAI,OACJC,GAAI,U,gOCnCZ,IASeC,EATMC,IAAOC,OAAV,KAMK,SAAAC,GAAK,OAAIA,EAAMC,OAAS,YAAc,U,gOCN7D,IAUeC,EAVWJ,IAAOK,IAAV,KCQR,SAASC,IAAY,IAAD,EACUC,qBAAWb,GAA7Cc,EADwB,EACxBA,KAAMC,EADkB,EAClBA,QAASC,EADS,EACTA,MAAOC,EADE,EACFA,SAc7B,OACI,eAAC,EAAD,WACG,cAAC,EAAD,CAAcR,OAAiB,OAATK,EAA8BI,QAf3D,WACIH,EAAQ,OAcL,gBADH,MAGsB,cAAC,EAAD,CAAcN,OAAiB,OAATK,EAA8BI,QAd9E,WACIH,EAAQ,OAac,gBAHtB,MAKsB,cAAC,EAAD,CAAcG,QAbxC,WAEQD,EADS,SAAVD,EACU,QAEA,SASS,SAA8C,OAATF,EAAgBZ,EAAM,GAAGC,GAAKD,EAAM,GAAGE,Q,opBC7B1G,IAyBee,EAzBMb,IAAOK,IAAV,K,oJCAlB,IAMeS,EANKd,IAAOK,IAAV,KCSF,SAASU,IAAU,IACvBP,EAAQD,qBAAWb,GAAnBc,KAEP,OACI,eAAC,EAAD,WACI,cAAC,EAAD,UACU,OAATA,EAAgBZ,EAAM,GAAGC,GAAKD,EAAM,GAAGE,KAExC,cAACQ,EAAD,OCnBZ,IAYeU,EAZA,CACX,aACA,UACA,OACA,MACA,YACA,QACA,aACA,QACA,WCPW,SAASC,EAAcf,GAClC,IACMgB,EADOhB,EAAMiB,KACQC,MAAM,MAAMC,KAAI,SAACC,EAAKC,GAAN,OAAgB,4BAAgBD,GAARC,MACnE,OACI,mCACKL,I,oVCLb,IAceM,EAdIxB,IAAOyB,GAAV,KCED,SAASC,EAAUxB,GAC9B,OACI,cAAC,EAAD,UACKA,EAAMyB,KAAKN,KAAI,SAACO,EAAUL,GACvB,IAAIM,EAAMN,EACV,OAAO,6BAAeK,GAANC,Q,6rBCPhC,IAyBeC,EAzBS9B,IAAOK,IAAV,K,iVCArB,IAee0B,EAfS/B,IAAOK,IAAV,K,uPCArB,IAWe2B,EAXYhC,IAAOK,IAAV,K,qNCAxB,IAUe4B,EAVSjC,IAAOK,IAAV,KCaN,SAAS6B,IAAsB,IACnC1B,EAAQD,qBAAWb,GAAnBc,KACP,OACI,eAAC,EAAD,WACI,cAAC,EAAD,UACI,4BAAa,OAATA,EAAgBZ,EAAM,GAAGC,GAAKD,EAAM,GAAGE,OAE/C,cAAC,EAAD,UACI,cAACmB,EAAD,CAAeE,KAAe,OAATX,EAAgBZ,EAAM,GAAGC,GAAKD,EAAM,GAAGE,OAEhE,cAAC,EAAD,UACI,cAAC4B,EAAD,CAAWC,KAAMX,SC1BjC,IA4GemB,EA5GF,CACT,CACIC,MAAM,CACFvC,GAAG,WACHC,GAAG,YAEPqB,KAAK,CACDtB,GAAG,iWAKHC,GAAG,+VAMPuC,MAAM,CACFC,KAAK,oCACLC,KAAK,8CAETC,MAAM,CACFC,IAAI,GACJC,QAAQ,MAGhB,CACIN,MAAM,CACFvC,GAAG,WACHC,GAAG,YAEPqB,KAAK,CACDtB,GAAG,qOAIHC,GAAG,uNAKPuC,MAAM,CACFC,KAAK,sCACLC,KAAK,uCAETC,MAAM,CACFC,IAAI,iCACJC,QAAQ,MAGhB,CACIN,MAAM,CACFvC,GAAG,eACHC,GAAG,gBAEPqB,KAAK,CACDtB,GAAG,mQAIHC,GAAG,8OAKPuC,MAAM,CACFC,KAAK,uCACLC,KAAK,wCAETC,MAAM,CACFC,IAAI,kCACJC,QAAQ,MAGhB,CACIN,MAAM,CACFvC,GAAG,WACHC,GAAG,YAEPqB,KAAK,CACDtB,GAAI,+dAOJC,GAAI,yeASRuC,MAAM,CACFC,KAAK,gCACLC,KAAK,iCAETC,MAAM,CACFC,IAAI,2BACJC,QAAQ,O,uXCrGpB,IAmBeC,EAnBY3C,IAAOK,IAAV,K,uNCAxB,IASeuC,EATG5C,IAAOK,IAAV,KAKS,SAAAH,GAAK,OAAIA,EAAM2C,SACf,SAAA3C,GAAK,OAAIA,EAAMC,OAASD,EAAM2C,MAAQ,UCR/C,MAA0B,4CCA1B,MAA0B,8CCA1B,MAA0B,+CCA1B,MAA0B,wC,kXCOzC,IA2BeC,EA3Be9C,IAAOK,IAAV,KAKC,SAAAH,GAAK,MACJ,MAArBA,EAAM6C,WAENC,EAEqB,MAArB9C,EAAM6C,WAENE,EAEqB,MAArB/C,EAAM6C,WAENG,EAEAC,K,meCvBR,IAkBeC,EAlBepD,IAAOK,IAAV,KAGH,SAAAH,GAAK,MAAoB,UAAhBA,EAAMQ,MAAoB,2BAA6B,wB,ohBCHxF,IAmBe2C,EAnBSrD,IAAOK,IAAV,KCYN,SAASiD,EAAMpD,GAAQ,IAAD,EACXK,qBAAWb,GAA1Bc,EAD0B,EAC1BA,KAAME,EADoB,EACpBA,MACb,OACI,cAAC,EAAD,CAAuBqC,WAAY7C,EAAMqD,KAAKf,MAAME,QAApD,SACI,cAAC,EAAD,CAAuBhC,MAAOA,EAA9B,SACI,eAAC,EAAD,WACI,cAAC,EAAD,UACc,OAATF,EAAgBN,EAAMqD,KAAKnB,MAAMvC,GAAKK,EAAMqD,KAAKnB,MAAMtC,KAE5D,cAAC,EAAD,UACc,OAATU,EAAgBN,EAAMqD,KAAKpC,KAAKtB,GAAKK,EAAMqD,KAAKpC,KAAKrB,KAE1D,eAAC,EAAD,WACI,oBAAG0D,KAAMtD,EAAMqD,KAAKlB,MAAME,KAAMkB,OAAO,QAAvC,gBACuB,OAATjD,EAAgBZ,EAAM,GAAGC,GAAKD,EAAM,GAAGE,MACjD,uBACJ,oBAAG0D,KAAMtD,EAAMqD,KAAKlB,MAAMC,KAAMmB,OAAO,QAAvC,gBACuB,OAATjD,EAAgBZ,EAAM,GAAGC,GAAKD,EAAM,GAAGE,gB,ggBC7B7E,IAwBe4D,GAxBW1D,IAAOC,OAAV,KAYjB,SAAAC,GAAK,OAAIA,EAAMyD,QAKX,SAAAzD,GAAK,OAAIA,EAAMyD,Q,kYCjBzB,IAeeC,GAfQ5D,IAAOK,IAAV,MCWL,SAASwD,KAAY,IACzBnD,EAASH,qBAAWb,GAApBgB,MACDoD,EAAW,CAAC,EAAG,EAAG,EAAG,GAFI,EAGbC,mBAAS,GAHI,mBAGxBC,EAHwB,KAGrBC,EAHqB,OAIHF,mBAAS,GAJN,mBAIxB5D,EAJwB,KAIhB+D,EAJgB,KAa/B,OACI,eAAC,GAAD,WAEQJ,EAASzC,KAAI,SAAC8C,EAAG5C,GACb,OAAO,qBACC6C,UAAU,sBAEVC,MAAO,CAACC,UAAU,cAAD,OAAgBN,EAAhB,OAHlB,SAIK,cAACV,EAAD,CACIC,KAAMpB,EAAKgC,MAHd5C,MAQrB,cAAC,GAAD,CACIoC,KAAM,OACNY,GAAG,UACH3D,QAzBG,WACDqD,EAAJ,IAAND,GAAgB,KAAOF,EAASU,OAAS,GAAWR,EAAI,KACzCE,EAAJ,IAAX/D,EAAyB2D,EAASU,OAAS,EAAerE,EAAS,IAoB/D,oBAKA,cAAC,GAAD,CACIwD,KAAM,QACNY,GAAG,WACH3D,QA1BI,WACZoD,KAAO,KAAOF,EAASU,OAAS,GAAKP,EAAK,GAAKA,EAAKD,EAAI,KACxD7D,IAAW2D,EAASU,OAAS,EAAIN,EAAU,GAAKA,EAAU/D,EAAS,IAqB/D,oBAKA,cAAC,EAAD,UAEQ2D,EAASzC,KAAI,SAACoD,EAAMlD,GAChB,OAAO,cAAC,EAAD,CAEKsB,MAAiB,UAAVnC,EAAoB,QAAU,QACrCP,OAAQA,IAAWsE,GAFdlD,W,8aCpDzC,IAqBemD,GArBS1E,IAAOK,IAAV,MCIN,SAASsE,KACpB,OACI,cAAC,GAAD,UACI,cAACd,GAAD,M,wpBCPZ,IA0Bee,GA1BS5E,IAAOK,IAAV,M,gNCArB,IASewE,GATS7E,IAAOK,IAAV,MAEI,SAAAH,GAAK,OAAIA,EAAM4E,OAIrB,SAAA5E,GAAK,OAAIA,EAAM4E,OCEnB,SAASC,KAAsB,IACnCvE,EAAQD,qBAAWb,GAAnBc,KACP,OACI,eAAC,GAAD,WACI,cAAC,EAAD,UACI,4BAAa,OAATA,EAAgBZ,EAAM,GAAGC,GAAKD,EAAM,GAAGE,OAE/C,cAAC,GAAD,CAAiBgF,IAAK,EAAtB,SACI,qDAAuB,uBAAvB,2BAEJ,eAAC,GAAD,CAAiBA,IAAK,EAAtB,UACI,mBAAGtB,KAAK,uDAAuDC,OAAO,QAAtE,yBAAmG,uBACnG,mBAAGD,KAAK,2BAA2BC,OAAO,QAA1C,6B,q2BCpBhB,IA8BeuB,GA9BahF,IAAOK,IAAV,MAID,SAAAH,GAAK,MAAoB,UAAhBA,EAAMQ,MAAoB,QAAU,WACxD,SAAAR,GAAK,MAAoB,UAAhBA,EAAMQ,MAAoB,QAAU,WC6B3CuE,OAzBf,WAAgB,IAAD,EACUlB,mBAAS,MADnB,mBACNvD,EADM,KACAC,EADA,OAEasD,mBAAS,QAFtB,mBAENrD,EAFM,KAGPwE,EAAuB,CAC3B1E,OAAMC,UACNC,QAAOC,SALI,MAQb,OACE,cAACjB,EAAgByF,SAAjB,CAA0BC,MAAOF,EAAjC,SACE,eAAC,GAAD,CAAqBxE,MAAOA,EAA5B,UAEE,cAACK,EAAD,IAEA,cAACmB,EAAD,IAEA,cAACyC,GAAD,IAEA,cAACI,GAAD,UCjBOM,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1Bb,O","file":"static/js/main.dbabacb5.chunk.js","sourcesContent":["import { createContext } from 'react'\r\n\r\nexport const SettingsContext = createContext()","const texts = [\r\n    {\r\n        sv: 'Portfolio - Daniel Koefoed',\r\n        en: 'Portfolio - Daniel Koefoed'\r\n    },\r\n    {\r\n        sv: 'Om mig',\r\n        en: 'About me'\r\n    },\r\n    {\r\n        sv: 'Hej!\\nJag är en aspirerande fullstack-utvecklare som för ' +\r\n            'närvarande pluggar på Nackademin i Stockholm. Tidigare har ' +\r\n            'jag bland annat studerat förpackningsdesign samt jobbat som ' +\r\n            'formgivare och originalare av trycksaker. Om något här på ' +\r\n            'sidan skulle väcka ditt intresse så tveka inte att höra av ' +\r\n            'dig!\\n/Daniel',\r\n        en: 'Hello!\\nI´m an aspiring fullstack developer currently ' +\r\n            'studying at Nackademin in Stockholm, Sweden. I´ve ' +\r\n            'previously studied packaging design and worked as a ' +\r\n            'designer of printed media. If you find anything on this ' +\r\n            'page that sparks your interest, don´t hesitate to reach ' +\r\n            'out!\\n/Daniel'\r\n    },\r\n    {\r\n        sv: 'Kontakt',\r\n        en: 'Contact'\r\n    },\r\n    {\r\n        sv: 'Gå till',\r\n        en: 'Go to'\r\n    },\r\n    {\r\n        sv: 'Kod',\r\n        en: 'Code'\r\n    },\r\n    {\r\n        sv: 'TEMA',\r\n        en: 'THEME'\r\n    }\r\n]\r\n\r\nexport default texts","import styled from 'styled-components'\r\n\r\nconst ButtonStyled = styled.button`\r\n    cursor: pointer;\r\n    font-size: 0.70rem;\r\n    color:inherit;\r\n    background: inherit;\r\n    border: none;\r\n    text-decoration: ${props => props.active ? 'underline' : 'none'};\r\n`\r\n\r\nexport default ButtonStyled","import styled from 'styled-components'\r\n\r\nconst SettingsDivStyled = styled.div`\r\n    @media screen and (min-width: 641px){\r\n        grid-column: 3;\r\n    }\r\n\r\n    @media screen and (min-width: 1008px){\r\n        grid-column: 5;\r\n    }\r\n`\r\n\r\nexport default SettingsDivStyled","import React, { useContext } from 'react'\r\n\r\nimport { SettingsContext } from '../contexts/SettingsContext'\r\n\r\nimport texts from '../assets/texts'\r\n\r\nimport ButtonStyled from './ButtonStyled'\r\n\r\nimport SettingsDivStyled from './layout/SettingsDivStyled'\r\n\r\nexport default function Settings() {\r\n    const {lang, setLang, theme, setTheme} = useContext(SettingsContext)\r\n    function setSv(){\r\n        setLang('sv')\r\n    }\r\n    function setEn(){\r\n        setLang('en')\r\n    }\r\n    function switchTheme(){\r\n        if(theme === 'dark'){\r\n            setTheme('light')\r\n        } else {\r\n            setTheme('dark')\r\n        }\r\n    }\r\n    return (\r\n        <SettingsDivStyled>\r\n           <ButtonStyled active={lang === 'sv' ? true : false} onClick={setSv}>\r\n               SV\r\n            </ButtonStyled> / <ButtonStyled active={lang === 'en' ? true : false} onClick={setEn}>\r\n                EN\r\n            </ButtonStyled> | <ButtonStyled onClick={switchTheme}>{lang === 'sv' ? texts[6].sv : texts[6].en}</ButtonStyled>\r\n        </SettingsDivStyled>\r\n    )\r\n}\r\n","import styled from 'styled-components'\r\n\r\nconst HeaderStyled = styled.div`\r\n    z-index: 1;\r\n    \r\n    @media screen and (max-width: 640px){\r\n        width: calc(100vw - 3.2rem);\r\n        display: flex;\r\n        justify-content: space-between;        \r\n        position: fixed;\r\n        margin: 3.2rem 1.6rem 0 1.6rem;\r\n    }\r\n    \r\n    @media screen and (min-width: 641px){\r\n        display: grid;\r\n        grid-row: 2;\r\n        grid-column: 2/5;\r\n        grid-column-gap: 1rem; \r\n        grid-template-columns: repeat(3, 1fr);\r\n    }\r\n\r\n    @media screen and (min-width: 1008px){\r\n        grid-column: 2/7;\r\n        grid-template-columns: repeat(5, 1fr);\r\n    }\r\n`\r\n\r\nexport default HeaderStyled","import styled from 'styled-components'\r\n\r\nconst TitleStyled = styled.div`\r\n    @media screen and (min-width: 641px){\r\n        grid-column: 1/3;\r\n    }\r\n`\r\n\r\nexport default TitleStyled","import React, { useContext} from 'react'\r\n\r\nimport { SettingsContext } from '../contexts/SettingsContext'\r\n\r\nimport texts from '../assets/texts'\r\n\r\nimport Settings from './Settings';\r\n\r\nimport HeaderStyled from '../components/layout/HeaderStyled';\r\nimport TitleStyled from '../components/layout/TitleStyled';\r\n\r\nexport default function Header() {\r\n    const {lang} = useContext(SettingsContext)    \r\n\r\n    return (       \r\n        <HeaderStyled>\r\n            <TitleStyled>\r\n            {lang === 'sv' ? texts[0].sv : texts[0].en}\r\n            </TitleStyled>\r\n            <Settings/>\r\n        </HeaderStyled>\r\n    )\r\n}\r\n","const skills = [\r\n    'JavaScript',\r\n    'Node.js',\r\n    'HTML',\r\n    'CSS',\r\n    'SASS/SCSS',\r\n    'React',\r\n    'Express.js',\r\n    'MySQL',\r\n    'MongoDB'    \r\n]\r\n\r\nexport default skills","import React from 'react'\r\n\r\nexport default function LineBreakText(props) {\r\n    const text = props.text;\r\n    const formattedText = text.split('\\n').map((str, index) => <p key={index}>{str}</p>)\r\n    return (\r\n        <>\r\n            {formattedText}\r\n        </>\r\n    )\r\n}\r\n","import styled from 'styled-components'\r\n\r\nconst ListStyled = styled.ul`\r\n    list-style-type: '-';\r\n    list-style-position: inside;\r\n    columns: 2;\r\n\r\n    @media screen and (min-width: 641px) and (max-width: 1007px){\r\n        columns: 3;\r\n    } \r\n\r\n    @media screen and (min-width: 1008px) {\r\n        list-style-position: outside;\r\n    }\r\n`\r\n\r\nexport default ListStyled","import React from 'react'\r\n\r\nimport ListStyled from './ListStyled'\r\n\r\nexport default function SkillList(props) {\r\n    return (\r\n        <ListStyled>\r\n            {props.list.map((listItem, index) => {\r\n                let key = index\r\n                return <li key={key}>{listItem}</li>\r\n            })}\r\n        </ListStyled>\r\n    )\r\n}\r\n","import styled from 'styled-components'\r\n\r\nconst HSection1Styled = styled.div`\r\n    display: grid;\r\n    grid-column: 2/4;\r\n    grid-row:1;  \r\n    grid-column-gap: 1rem; \r\n    grid-row-gap: 1rem; \r\n    @media screen and (max-width: 640px){\r\n        scroll-snap-align: start;        \r\n        grid-template-rows: 5.2rem 2rem auto 1fr;\r\n    }\r\n\r\n    @media screen and (min-width: 641px) and (max-width: 1007px){\r\n        grid-column: 2/5;\r\n        grid-row: 3;\r\n        grid-template-columns: repeat(3, 1fr);\r\n        grid-template-rows: repeat(2, auto);\r\n    }\r\n\r\n    @media screen and (min-width: 1008px){\r\n        grid-column: 2/7;\r\n        grid-row: 3;\r\n        grid-template-columns: repeat(5, 1fr);\r\n    }\r\n`\r\n\r\nexport default HSection1Styled","import styled from 'styled-components'\r\n\r\nconst ListBlockStyled = styled.div`\r\n    grid-column: 1/3;\r\n    grid-row: 4;\r\n\r\n    @media screen and (min-width: 641px) and (max-width: 1007px){\r\n        grid-column: 2/4;\r\n        grid-row: 2;\r\n    }\r\n\r\n    @media screen and (min-width: 1008px){\r\n        grid-column: 5;\r\n        grid-row: 1;\r\n    }\r\n`\r\n\r\nexport default ListBlockStyled","import styled from 'styled-components'\r\n\r\nconst SectionTitleStyled = styled.div`\r\n    @media screen and (max-width: 640px){\r\n        grid-column: 1/3;\r\n        grid-row: 2;\r\n    }\r\n\r\n    @media screen and (min-width: 641px){\r\n        grid-column: 1;\r\n    }\r\n`\r\n\r\nexport default SectionTitleStyled","import styled from 'styled-components'\r\n\r\nconst TextBlockStyled = styled.div`\r\n    grid-column: 1/3;\r\n    grid-row: 3;\r\n\r\n    @media screen and (min-width: 641px){\r\n        grid-column: 2/4;\r\n        grid-row: 1;\r\n    }\r\n`\r\n\r\nexport default TextBlockStyled","import React, {useContext} from 'react'\r\n\r\nimport { SettingsContext } from '../contexts/SettingsContext'\r\n\r\nimport skills from '../assets/skills'\r\nimport texts from '../assets/texts'\r\n\r\nimport LineBreakText from './LineBreakText';\r\nimport SkillList from './SkillList';\r\n\r\nimport HSection1Styled from '../components/layout/HSection1Styled';\r\nimport ListBlockStyled from '../components/layout/ListBlockStyled';\r\nimport SectionTitleStyled from '../components/layout/SectionTitleStyled';\r\nimport TextBlockStyled from '../components/layout/TextBlockStyled';\r\n\r\nexport default function HorizontalSection1() {\r\n    const {lang} = useContext(SettingsContext)\r\n    return (\r\n        <HSection1Styled>\r\n            <SectionTitleStyled>\r\n                <p>{lang === 'sv' ? texts[1].sv : texts[1].en}</p>\r\n            </SectionTitleStyled>\r\n            <TextBlockStyled>\r\n                <LineBreakText text={lang === 'sv' ? texts[2].sv : texts[2].en}/>\r\n            </TextBlockStyled>\r\n            <ListBlockStyled>\r\n                <SkillList list={skills}/>\r\n            </ListBlockStyled>\r\n        </HSection1Styled>\r\n    )\r\n}\r\n  \r\n","const work = [\r\n    {\r\n        title:{\r\n            sv:'Chat-app',\r\n            en:'Chat app'\r\n        },\r\n        text:{\r\n            sv:'En chat-applikation med användar-login. ' +\r\n               'Skapa ett användarkonto och logga in. Se andra användare och vilka av dem som är online,' +\r\n               'chatta privat eller skapa en grupp-kanal med flera användare. All data sparas i en databas ' +\r\n               'som uppdateras kontinuerligt. Byggd i NodeJS och MongoDB med bcrypt, ejs, express, ' +\r\n               'mongoose, passport och socket.io.',\r\n            en:'A chat application with user login. ' +\r\n               'Register a user account and log in. Other users are listed and those who are online ' +\r\n               'highlighted. Send private messages or create a group channel with multiple users. All ' +\r\n               'data is stored in a continuously updating database. Built in NodeJS and MongoDB using ' +\r\n               'bcrypt, ejs, express, mongoose, passport and socket.io.'\r\n        },\r\n        links:{\r\n            repo:'https://github.com/d-c-k/chat-app',\r\n            page:'https://tranquil-peak-98736.herokuapp.com/'\r\n        },\r\n        image:{\r\n            mob:'',\r\n            desktop:'0'\r\n        }\r\n    },\r\n    {\r\n        title:{\r\n            sv:'CRUD-app',\r\n            en:'CRUD app'\r\n        },\r\n        text:{\r\n            sv:'Skapa, läs av, uppdatera och ta bort poster i en lista. ' +\r\n               'Inkluderar även login med JWT-token samt validering av input-formatet ' +\r\n               'i \"VAT-Number\"-fältet. Byggd i React med styled-components. ' +\r\n               'Lösenord: javascriptoramverk',\r\n            en:'Create, read, update and delete posts in a list. ' +\r\n               'Also includes log in with JWT-token and validation of input format ' +\r\n               'in the \"VAT-Number\" field. Built in React using styled-components. ' +\r\n               'Password: javascriptoramverk'\r\n        },\r\n        links:{\r\n            repo:'https://github.com/d-c-k/react-crud',\r\n            page:'https://d-c-k.github.io/react-crud/'\r\n        },\r\n        image:{\r\n            mob:'/img/react_crud_screen_mob.jpg',\r\n            desktop:'1'\r\n        }\r\n    },\r\n    {\r\n        title:{\r\n            sv:'Musikspelare',\r\n            en:'Audio player'\r\n        },\r\n        text:{\r\n            sv:'En enkel ljuduppspelnings-app med några förinlagda .mp3-filer ' +\r\n               'som spelas upp med en tillhörande .gif som loopas i bakgrunden. ' +\r\n               'Funktioner inkluderar spela/pausa, nästa/förra spår, repeat, ' +\r\n               'volymkontroll samt en spårlista(endast desktop).',\r\n            en:'A simple audio playback app with a few preloaded .mp3-files and ' +\r\n               'corresponding .gif-images looping in the background. Functions ' +\r\n               'include play/pause, previous and next track selectors, repeat, ' +\r\n               'volume control and a tracklist(desktop only)'\r\n        },\r\n        links:{\r\n            repo:'https://github.com/d-c-k/audioplayer',\r\n            page:'https://d-c-k.github.io/audioplayer/'\r\n        },\r\n        image:{\r\n            mob:'/img/audioplayer_screen_mob.jpg',\r\n            desktop:'2'\r\n        }\r\n    },    \r\n    {\r\n        title:{\r\n            sv:'Quiz-app',\r\n            en:'Quiz app'\r\n        },\r\n        text:{\r\n            sv: 'Ett quiz med frågor hämtade via API. Välj om du ' + \r\n                'vill besvara mellan 5 och 10 frågor, markera svarsalternativet ' +\r\n                'eller alternativen du tror stämmer och gå vidare till nästa fråga. ' +\r\n                'Om du ångrar ett svar kan du backa så långt du vill innan du väljer ' +\r\n                'att låsa och gå vidare. På resultatsidan visas din totala poäng, ' +\r\n                'varje fråga skrivs ut i en ruta med ditt svar och eventuellt rätt ' +\r\n                'alternativ om det du svarade skulle vara fel.',\r\n            en: 'A quiz with questions fetched via an API. ' +\r\n                'Choose if you want to answer between 5 and 10 questions, select ' +\r\n                'the alternative or alternatives you belive is correct and move ' +\r\n                'on to the next question. If you wish to change an answer on a ' +\r\n                'previous question you may go back as far as you like before ' +\r\n                'locking your solution. On the result screen your total score is ' +\r\n                'shown, every question is printed with your selected answer and ' +\r\n                'possible correct answers if what you chose happend to be incorrect.'\r\n        },\r\n        links:{\r\n            repo:'https://github.com/d-c-k/Quiz',\r\n            page:'https://d-c-k.github.io/Quiz/'\r\n        },\r\n        image:{\r\n            mob:'/img/quiz_screen_mob.jpg',\r\n            desktop:'3',\r\n        }\r\n    }\r\n]\r\n\r\nexport default work","import styled from 'styled-components'\r\n\r\nconst CarouselDotsStyled = styled.div`\r\n    @media screen and (max-width: 640px){\r\n        //position: fixed;\r\n        bottom: 20%\r\n    }\r\n\r\n    position: absolute;\r\n    bottom: 5%;\r\n    height: 5%;\r\n    width: auto;\r\n    left: 0;\r\n    right: 0;\r\n    margin: auto;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n\r\n`\r\n\r\nexport default CarouselDotsStyled","import styled from 'styled-components'\r\n\r\nconst DotStyled = styled.div`\r\n    width: 0.3rem;\r\n    height: 0.3rem;\r\n    margin: 0 .5rem;\r\n    border-radius: 50%;\r\n    border: 1px solid ${props => props.color};\r\n    background-color: ${props => props.active ? props.color : 'none'};\r\n`\r\n\r\nexport default DotStyled","export default __webpack_public_path__ + \"static/media/chat-app_screen.16b4ebd6.jpg\";","export default __webpack_public_path__ + \"static/media/react_crud_screen.b4bfefd4.jpg\";","export default __webpack_public_path__ + \"static/media/audioplayer_screen.588bcbcd.jpg\";","export default __webpack_public_path__ + \"static/media/quiz_screen.279bc102.jpg\";","import styled from 'styled-components'\r\n\r\nimport zero from '../assets/img/chat-app_screen.jpg'\r\nimport one from '../assets/img/react_crud_screen.jpg'\r\nimport two from '../assets/img/audioplayer_screen.jpg'\r\nimport three from '../assets/img/quiz_screen.jpg'\r\n\r\nconst SlideBackgroundStyled = styled.div`   \r\n    @media screen and (max-width: 640px){\r\n        //scroll-snap-align: start;        \r\n    }\r\n\r\n    background-image: url(${props => \r\n        props.imageIndex === '0' \r\n        ? \r\n        zero \r\n        : \r\n        props.imageIndex === '1'\r\n        ?\r\n        one\r\n        :\r\n        props.imageIndex === '2' \r\n        ? \r\n        two \r\n        : \r\n        three});\r\n    background-position: center;\r\n    background-repeat: no-repeat;\r\n    background-size:cover;\r\n    min-width: 100%;\r\n    height:100%;\r\n    position: relative;    \r\n`\r\n\r\nexport default SlideBackgroundStyled","import styled from 'styled-components'\r\n\r\nconst SlideForegroundStyled = styled.div`\r\n    height: 100%;\r\n    width: 100%;\r\n    background-color: ${props => props.theme === 'light' ? 'rgba(255, 255, 255, .65)' : 'rgba(0, 0, 0, .65)'};\r\n    display: grid;\r\n    grid-template-columns: 1.6rem 1fr 1fr 1.6rem;\r\n    \r\n    @media screen and (min-width: 641px){\r\n        padding-top: 1rem;\r\n        grid-template-columns: 3.2rem 1fr 1fr 1fr 3.2rem;\r\n        grid-column-gap: 1rem;\r\n    }\r\n\r\n    @media screen and (min-width: 1008px){\r\n        grid-template-columns: repeat(7, 1fr);\r\n    }\r\n`\r\n\r\nexport default SlideForegroundStyled","import styled from 'styled-components'\r\n\r\nconst SlideGridStyled = styled.div`\r\n    display: grid;\r\n    grid-column: 2/4;\r\n    grid-column-gap: 1rem;\r\n    grid-row-gap: 1rem;\r\n    grid-template-rows: 5.2rem 2rem auto 1fr;\r\n\r\n    @media screen and (min-width: 641px) and (max-width: 1007px){\r\n        grid-column: 2/5;\r\n        grid-template-columns: repeat(3, 1fr);\r\n        grid-template-rows: auto 1fr;\r\n    }\r\n\r\n    @media screen and (min-width: 1008px){\r\n        grid-column: 2/7;\r\n        grid-template-columns: repeat(5, 1fr);\r\n    }\r\n`\r\n\r\nexport default SlideGridStyled","import React, {useContext} from 'react'\r\n\r\nimport { SettingsContext } from '../contexts/SettingsContext'\r\n\r\nimport texts from '../assets/texts'\r\n\r\nimport SlideBackgroundStyled from './SlideBackgroundStyled'\r\nimport SlideForegroundStyled from './SlideForegroundStyled'\r\n\r\nimport ListBlockStyled from './layout/ListBlockStyled'\r\nimport SectionTitleStyled from './layout/SectionTitleStyled'\r\nimport SlideGridStyled from './layout/SlideGridStyled'\r\nimport TextBlockStyled from './layout/TextBlockStyled'\r\n\r\nexport default function Slide(props) {\r\n    const {lang, theme} = useContext(SettingsContext)\r\n    return (\r\n        <SlideBackgroundStyled imageIndex={props.data.image.desktop}>\r\n            <SlideForegroundStyled theme={theme}>    \r\n                <SlideGridStyled>\r\n                    <SectionTitleStyled>\r\n                        {lang === 'sv' ? props.data.title.sv : props.data.title.en}\r\n                    </SectionTitleStyled>\r\n                    <TextBlockStyled>\r\n                        {lang === 'sv' ? props.data.text.sv : props.data.text.en}\r\n                    </TextBlockStyled>\r\n                    <ListBlockStyled>\r\n                        <a href={props.data.links.page} target=\"blank\">\r\n                            &gt;&gt; {lang === 'sv' ? texts[4].sv : texts[4].en}\r\n                        </a><br/>\r\n                        <a href={props.data.links.repo} target=\"blank\">\r\n                            &gt;&gt; {lang === 'sv' ? texts[5].sv : texts[5].en}\r\n                        </a>\r\n                    </ListBlockStyled>\r\n                </SlideGridStyled>\r\n            </SlideForegroundStyled>\r\n        </SlideBackgroundStyled>\r\n    )\r\n}\r\n","import styled from 'styled-components'\r\n\r\nconst SlideButtonStyled = styled.button`\r\n    position: absolute;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    height: 80%;\r\n    width: 2.5%;\r\n    border: none;\r\n    color: inherit;\r\n    font-size: 2rem;\r\n    background: none;\r\n    cursor: pointer;\r\n    text-align: center;\r\n    ${props => props.side}: 2.5%;\r\n\r\n    @media screen and (max-width: 640px){\r\n        //display:none;\r\n        transform: none;\r\n        ${props => props.side}: 0%;\r\n        width: 20%;\r\n        top: 65%;\r\n        height: 20%;\r\n    }\r\n`\r\n\r\nexport default SlideButtonStyled","import styled from 'styled-components'\r\n\r\nconst CarouselStyled = styled.div`\r\n    @media screen and (max-width: 640px){\r\n        // scroll-snap-points-x: repeat(100vw);\r\n        // scroll-snap-type: x mandatory;\r\n        // overflow-x: scroll;\r\n    }\r\n\r\n    width: 100%;\r\n    height: 100%;\r\n    box-sizing: border-box;\r\n    display: flex;\r\n    align-items: center;\r\n    position: relative;\r\n`\r\n\r\nexport default CarouselStyled","import React, {useState, useContext} from 'react'\r\n\r\nimport { SettingsContext } from '../contexts/SettingsContext'\r\n\r\nimport work from '../assets/work'\r\n\r\nimport CarouselDotsStyled from './CarouselDotsStyled'\r\nimport DotStyled from './DotStyled'\r\nimport Slide from './Slide'\r\nimport SlideButtonStyled from './SlideButtonStyled'\r\n\r\nimport CarouselStyled from './layout/CarouselStyled'\r\n\r\nexport default function Carousel() {\r\n    const {theme} = useContext(SettingsContext)\r\n    const slideArr = [0, 1, 2, 3]\r\n    const [x, setX] = useState(0)\r\n    const [active, setActive] = useState(0)\r\n    const goLeft = () => {\r\n        x === 0 ? setX(-100 * (slideArr.length - 1)) : setX(x + 100)\r\n        active === 0 ? setActive(slideArr.length - 1) : setActive(active - 1)\r\n    }\r\n    const goRight = () => {\r\n        x === -100 * (slideArr.length - 1) ? setX(0) : setX(x - 100)\r\n        active === slideArr.length - 1 ? setActive(0) : setActive(active + 1)\r\n    }\r\n    return (\r\n        <CarouselStyled>\r\n            {\r\n                slideArr.map((i, index) => {\r\n                    return <div \r\n                            className=\"innerSlideContainer\" \r\n                            key={index} \r\n                            style={{transform: `translateX(${x}%)`}}>\r\n                                <Slide \r\n                                    data={work[i]}\r\n                                />\r\n                            </div>\r\n                })\r\n            }\r\n            <SlideButtonStyled \r\n                side={'left'} \r\n                id=\"leftBtn\"\r\n                onClick={goLeft}\r\n            >&#10094;</SlideButtonStyled>\r\n            <SlideButtonStyled \r\n                side={'right'}\r\n                id=\"rightBtn\"\r\n                onClick={goRight}\r\n            >&#10095;</SlideButtonStyled>\r\n            <CarouselDotsStyled>\r\n                {\r\n                    slideArr.map((item, index) => {\r\n                        return <DotStyled \r\n                                    key={index} \r\n                                    color={theme === 'light' ? 'black' : 'white'}\r\n                                    active={active === item ? true : false}\r\n                                />\r\n                    })\r\n                }\r\n            </CarouselDotsStyled>\r\n        </CarouselStyled>\r\n    )\r\n}\r\n","import styled from 'styled-components'\r\n\r\nconst HSection2Styled = styled.div`\r\n    display: grid;\r\n    grid-column: 1/5;\r\n    grid-row: 2;\r\n    overflow:hidden;\r\n\r\n    @media screen and (max-width: 640px){\r\n        scroll-snap-align: start; \r\n    }\r\n    \r\n    @media screen and (min-width: 641px){\r\n        grid-column: 1/6;\r\n        grid-row: 4;\r\n    }\r\n\r\n    @media screen and (min-width: 1008px){\r\n        grid-column: 1/8\r\n    }\r\n\r\n`\r\n\r\nexport default HSection2Styled","import React from 'react'\r\n\r\nimport Carousel from './Carousel';\r\n\r\nimport HSection2Styled from '../components/layout/HSection2Styled';\r\n\r\nexport default function HorizontalSection2() {\r\n    return (\r\n        <HSection2Styled>\r\n            <Carousel/>\r\n        </HSection2Styled>\r\n    )\r\n}\r\n","import styled from 'styled-components'\r\n\r\nconst HSection3Styled = styled.div`\r\n    display: grid;\r\n    grid-column: 2/4;\r\n    grid-row: 3;\r\n    grid-column-gap: 1rem;\r\n    grid-row-gap: 1rem;\r\n\r\n    @media screen and (max-width: 640px){\r\n        scroll-snap-align: start;\r\n        grid-template-rows: 5.2rem 2rem auto 1fr;\r\n    }\r\n\r\n    @media screen and (min-width: 641px){\r\n        grid-column: 2/5;\r\n        grid-row: 5;\r\n        grid-column-gap: 1rem;\r\n        grid-template-columns: repeat(3, 1fr);\r\n        margin-bottom: 2rem;\r\n    }\r\n\r\n    @media screen and (min-width: 1008px){\r\n        grid-column: 2/7;\r\n        grid-template-columns: repeat(5, 1fr);\r\n    }\r\n`\r\n\r\nexport default HSection3Styled","import styled from 'styled-components'\r\n\r\nconst SingleColStyled = styled.div`\r\n    @media screen and (max-width: 640px) {\r\n        grid-row: calc(${props => props.col} + 1);\r\n        grid-column: 1;\r\n    }\r\n\r\n    grid-column: ${props => props.col};\r\n`\r\n\r\nexport default SingleColStyled","import React, {useContext} from 'react'\r\n\r\nimport { SettingsContext } from '../contexts/SettingsContext'\r\n\r\nimport texts from '../assets/texts'\r\n\r\nimport HSection3Styled from '../components/layout/HSection3Styled';\r\nimport SectionTitleStyled from '../components/layout/SectionTitleStyled';\r\nimport SingleColStyled from '../components/layout/SingleColStyled';\r\n\r\nexport default function HorizontalSection3() {\r\n    const {lang} = useContext(SettingsContext)\r\n    return (\r\n        <HSection3Styled>\r\n            <SectionTitleStyled>\r\n                <p>{lang === 'sv' ? texts[3].sv : texts[3].en}</p>\r\n            </SectionTitleStyled>\r\n            <SingleColStyled col={2}>\r\n                <p>dc.koefoed@gmail.com<br/>(+46)70 - 755 06 60</p>\r\n            </SingleColStyled>\r\n            <SingleColStyled col={3}>\r\n                <a href=\"https://www.linkedin.com/in/daniel-koefoed-647306a8/\" target=\"blank\">&gt;&gt; Linkedin</a><br/>\r\n                <a href=\"https://github.com/d-c-k\" target=\"blank\">&gt;&gt; GitHub</a>\r\n            </SingleColStyled>\r\n        </HSection3Styled>\r\n    )\r\n}\r\n","import styled from 'styled-components'\r\n\r\nconst MainContainerStyled = styled.div`\r\n    height: 100vh;\r\n    width: 100vw;\r\n\r\n    background-color: ${props => props.theme === 'light' ? 'white' : 'black'}};\r\n    color: ${props => props.theme === 'light' ? 'black' : 'white'};\r\n\r\n    @media screen and (max-width: 640px){\r\n        display: grid;\r\n        grid-template-columns: 1.6rem 1fr 1fr 1.6rem; \r\n        grid-template-rows: repeat(3, 100vh);\r\n        scroll-snap-points-y: repeat(100vh);\r\n        scroll-snap-type: y mandatory;\r\n        overflow-y: scroll;\r\n    }\r\n\r\n    @media screen and (min-width: 641px){\r\n        display: grid;\r\n        grid-template-columns: 3.2rem 1fr 1fr 1fr 3.2rem;\r\n        grid-template-rows: 3.2rem 4.2rem auto 1fr auto; \r\n        grid-column-gap: 1rem;\r\n        grid-row-gap: 1rem;\r\n    }\r\n\r\n    @media screen and (min-width: 1008px){\r\n        grid-template-columns: repeat(7, 1fr);\r\n        grid-template-rows: 3.2rem 4.2rem auto 1fr auto; \r\n    }\r\n`\r\n\r\nexport default MainContainerStyled","import React, { useState } from 'react'\n\nimport { SettingsContext } from './contexts/SettingsContext'\n\nimport Header from './components/Header';\nimport HorizontalSection1 from './components/HorizontalSection1';\nimport HorizontalSection2 from './components/HorizontalSection2';\nimport HorizontalSection3 from './components/HorizontalSection3';\n\nimport MainContainerStyled from './components/layout/MainContainerStyled';\n\nfunction App() {\n  const [lang, setLang] =useState('sv')\n  const [theme, setTheme] = useState('dark')\n  const SettingsContextValue = {\n    lang, setLang,\n    theme, setTheme\n  }\n\n  return (\n    <SettingsContext.Provider value={SettingsContextValue}>\n      <MainContainerStyled theme={theme}>\n\n        <Header/>\n\n        <HorizontalSection1/>\n\n        <HorizontalSection2/>\n        \n        <HorizontalSection3/>\n\n      </MainContainerStyled>\n    </SettingsContext.Provider>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}